{
  "name": "Vision-Based AI Agent Scraper",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -420,
        -60
      ],
      "id": "b257397b-0569-40f3-838d-785af81aff71",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "url": "https://app.scrapingbee.com/api/v1",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "........."#Enter Api Key(scrapingbee)
            },
            {
              "name": "url",
              "value": "={{ $json.scrape_url }}"
            },
            {
              "name": "screenshot_full_page",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -400,
        180
      ],
      "id": "759dfeab-5ee5-4951-98e4-165b8c663405",
      "name": "ScrappingBee"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "......",
          "mode": "list",
          "cachedResultName": "URL List",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/............./edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sayfa1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/.........../edit#gid=0"
        },
        "options": {
          "returnFirstMatch": false
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -220,
        -60
      ],
      "id": "c417c710-38bf-40ca-b99b-970eee84bf7d",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "....",
          "name": "ayberkplt05"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1ab4846e-2b1a-49e6-9bc3-3d9322ade52d",
              "name": "scrape_url",
              "value": "={{ $json.scrape_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -20,
        -60
      ],
      "id": "faf31f5a-8cae-41aa-8575-a705507a65a1",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is the screenshot you need to use to extract data about the page:\n\n{{ $json.scrape_url }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Extract the following details from the input screenshot:\n\n- Product Titles\n- Product Prices\n- Brands\n- Promotional Information (e.g., if the product is on promo)\n\nStep 1: Image-Based Extraction\nAnalyze the provided screenshot to identify and extract all the required details: product titles, prices, brands, and promotional information.\nEnsure the extraction is thorough and validate the completeness of the information.\nCross-check all products for missing or unclear details.\nHighlight any limitations (e.g., text is unclear, partially cropped, or missing) in the extraction process.\n\nStep 2: HTML-Based Extraction (If Needed)\nIf you determine that any required information is:\n\nIncomplete or missing (e.g., not all titles, prices, or brands could be retrieved).\nAmbiguous or uncertain (e.g., unclear text or potential errors in OCR).\nUnavailable due to the limitations of image processing (e.g., product links).\n\nThen:\n\nCall the HTML-based tool with the input URL to access the page content.\nExtract the required details from the HTML to supplement or replace the image-based results.\nCombine data from both sources (if applicable) to ensure the final result is comprehensive and accurate.\n\nAdditional Notes\nAvoid redundant HTML tool usage—confirm deficiencies in image-based extraction before proceeding.\nFor products on promotion, explicitly label this status in the output.\nReport extraction errors or potential ambiguities (e.g., text illegibility).\n\nIn your output, include all these fields as shown in the example below. If there is no promotion, set \"promo\" to false and \"promo_percent\" to 0.\n\njson\nCopy code\n[{\n  \"product_title\": \"The title of the product\",\n  \"product_price\": \"The price of the product\",\n  \"product_brand\": \"The brand of the product\",\n  \"promo\": true,\n  \"promo_percent\": 25\n}]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -160,
        200
      ],
      "id": "02abf183-7a66-4a90-a94f-d055ee042ce2",
      "name": "Vision Based AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -240,
        400
      ],
      "id": "4b807f8c-0496-4ace-9cd5-cbc1d42ed88f",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": ".....",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "description": "Call this tool ONLY when you need to retrieve the HTML content of a webpage.",
        "workflowId": {
          "__rl": true,
          "value": ".....",
          "mode": "list",
          "cachedResultName": "My Sub-Workflow 2"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        0,
        440
      ],
      "id": "b6ad7d62-6954-41e6-95d2-aa85d99c21e3",
      "name": "Call n8n Workflow Tool"
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n    \"headline\": \"The main title of the news article\",\n    \"summary\": \"A short summary or lead of the article\",\n    \"publication_date\": \"The date when the article was published\",\n    \"author\": \"Author of the article if available\",\n    \"source\": \"Website domain or brand\",\n    \"category\": \"Category of the article (e.g., politics, sports, world)\",\n    \"keywords\": [\"keyword1\", \"keyword2\", \"keyword3\"]\n  }\n]\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        180,
        460
      ],
      "id": "e91884a7-cd5f-4be1-8a0c-2ee2916494f6",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        200,
        200
      ],
      "id": "dbab7d28-58e8-48b9-99b2-e1cce1ab3cc2",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": ".....",
          "mode": "list",
          "cachedResultName": "URL List",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/...../edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sayfa1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/....../edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "scrape_url": "={{ $json.summary }}"
          },
          "matchingColumns": [
            "scrape_url"
          ],
          "schema": [
            {
              "id": "scrape_url",
              "displayName": "scrape_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        420,
        200
      ],
      "id": "2a577dba-7a71-4507-8aff-ff0ce750d619",
      "name": "Append row in sheet",
      "credentials": {
        "....": {
          "id": "...",
          "name": "ayberkplt05"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "ScrappingBee",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ScrappingBee": {
      "main": [
        [
          {
            "node": "Vision Based AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vision Based AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow Tool": {
      "ai_tool": [
        [
          {
            "node": "Vision Based AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Vision Based AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Vision Based AI Agent": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a2660223-aa77-46c6-b062-f6d3749430b0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "..."
  },
  "id": "..",
  "tags": []
}
